.main {
  container: contents / inline-size;

  display: grid;
  grid-template-columns: var(--template-columns);
  grid-column: wide;

  text-align: center;

  > * {
    grid-column: content;
  }

  .app {
    grid-column: wide;
  }

  hr {
    grid-column: wide;
  }
}

.info {
  text-align: start;
  --colorBlock-color: /* Defined in ~/App.tsx */ ;
  --colorBar-width: var(--spacing-md);

  > .infoBlock {
    display: grid;
    grid-template-columns: [color-start] var(--colorBar-width) [color-end content-start] minmax(0, 1fr) [content-end];
    grid-auto-rows: minmax(max-content, 100%);

    gap: var(--gutter);
    row-gap: var(--gutter-sm);

    position: relative;

    padding-block: var(--spacing-md);
    padding-block-end: var(--spacing-lg);
    padding-inline-end: var(--spacing-md);

    background-color: var(--color-base);
    border-radius: var(--border-radius);

    box-shadow: 0px 0px 1ch 0.5ex color-mix(in oklab, var(--colorBlock-color), transparent 95%);

    h2 {
      margin: unset;
    }

    > * {
      grid-column: content;
      align-self: flex-start;
    }

    > ul {
      padding-inline-start: unset;
      min-block-size: 100%;
    }

    &::before {
      content: "";
      position: absolute;
      block-size: 100%;
      inline-size: var(--colorBar-width);

      background-color: var(--colorBlock-color, var(--color-primary));
    }

    &::after {
      opacity: 0;
      transition: all 1000ms cubic-bezier(0.55, 0.085, 0.68, 0.53);
      content: "";
      position: absolute;
      block-size: 80%;
      top: 10%;
      inline-size: 100%;
      z-index: -1;

      background: repeating-conic-gradient(var(--colorBlock-color) 0 3%, transparent 0 20%),
        repeating-conic-gradient(transparent 0 19%, var(--colorBlock-color) 0 19%) 50% / 10% 20%,
        repeating-conic-gradient(transparent 0 39%, var(--colorBlock-color) 0 59%) 50% / 70% 70%,
        radial-gradient(var(--colorBlock-color) 100%, transparent 0), var(--color-base);
      background-repeat: no-repeat;

      filter: blur(6dvw) contrast(200%);
      box-shadow: 0 0 0 12px var(--color-base);
    }

    &:hover::after {
      opacity: 1;
    }
  }
}

.faq {
  display: flex;
  column-gap: var(--gutter-sm);
  flex-wrap: wrap;

  min-height: 100%;

  align-items: center;

  p {
    padding: var(--spacing-sm);
    border-radius: var(--border-radius);
    border: 1px solid var(--color-border);
    box-shadow: var(--shadow-elevation);
    align-content: center;
    place-self: stretch;
  }

  svg {
    filter: drop-shadow(3px 2px 4px rgba(0, 0, 0, 0.4));
  }

  :nth-child(1) {
    flex: 1 1 60%;
  }

  :nth-child(2) {
    flex: 0 0 var(--spacing-md);
  }

  :nth-child(3) {
    flex: 1 0 24ch;
  }
}

.socials {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.socialIcons {
  display: flex;
  justify-content: center;
  gap: var(--gutter-sm);
}

.footer,
.header {
  display: grid;
  gap: var(--gutter-sm);
  grid-column: content;
  place-items: center;
}

.todos {
  color: var(--secondary-d2);
  background-color: color-mix(in oklab, var(--secondary-l4), transparent 70%);
  padding: 1rem;
}
