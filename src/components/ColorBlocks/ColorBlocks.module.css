/* ---------------------- */

.main {
  --min-block-width: 21ch;

  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(calc(25cqw - var(--gutter-sm)), 1fr));
  grid-auto-flow: row;
  gap: var(--gutter-sm);
  background: var(--bg-base);

  z-index: 1;

  > * {
    text-align: center;
    gap: inherit;
  }

  h2 {
    grid-column: 1 / -1;
  }
}

.infoSwitch {
  grid-column: 1 / -1;
  justify-self: flex-end;
  display: flex;
  align-items: "center";
  font-size: var(--fontsize-xs);
  color: var(--text-muted);
  gap: var(--gutter-xs);
  line-height: 1;
  padding-inline-end: var(--spacing-sm);
}

.colorInput {
  transition: background-color 300ms ease-out;
}

/* Note: @dev auto-fit doesn't play nice with containment in webkit browsers.
 * Ensure containment context is applied to parent container for auto-fit to work. 
 * @see https://bugs.webkit.org/show_bug.cgi?id=256047 */
@container (inline-size < calc(4 * 22ch )) {
  .main {
    grid-template-columns: repeat(2, minmax(min(100cqw, 25ch), 1fr));
  }
}

@container (inline-size < calc(2 * 30ch)) {
  .main {
    grid-template-columns: repeat(auto-fit, minmax(min(100cqw, 21ch), 1fr));
  }
}

.variants {
  display: grid;
  gap: inherit;
  position: relative;

  /* @dev added first-of-type selector until a fix for webkit z-indexes is implemented */
  &:first-of-type:before {
    content: "Darker  ↼ ⇀ Lighter";
    font-size: var(--fontsize-xs);

    position: absolute;
    top: 0;
    left: -1.2lh;
    z-index: -1;

    height: 100%;

    writing-mode: sideways-lr;

    @supports not (writing-mode: sideways-lr) {
      /* @dev Fallback for webkit browsers that don't support sideways-lr */
      writing-mode: vertical-lr;
      rotate: 180deg;
    }
  }
}

.blocks {
  --block-color: /* defined in src/components/ColorBlocks/index.tsx */ ;

  display: grid;
  color: var(--text-contrast);
  align-items: center;

  position: relative;

  font-size: var(--fontsize-md);
  line-height: var(--line-height-condensed);

  border: 2px solid var(--block-color);
  background-color: color-mix(in oklab, var(--block-color), transparent 90%);

  .blockName,
  .blockInfo {
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .blockName {
    padding: var(--spacing-xs);
    opacity: 1;
    white-space: nowrap;
    font-style: italic;
    transition: all 1000ms ease-out;

    .mainBlock & {
      font-weight: bold;
      font-style: normal;
    }
  }

  .blockInfo {
    content-visibility: hidden;
    font-size: var(--fontsize-sm);
    line-height: 1;
    color: var(--text-base);
    opacity: 0.8;
    block-size: 1lh;
    box-sizing: content-box;
    padding-block: var(--spacing-sm);

    transition: color 300ms ease-in-out, opacity 400ms ease-in-out;

    &.loading {
      color: var(--text-muted);
      opacity: 0.6;
    }

    &.visible {
      animation: showInfo ease-out 450ms forwards;
    }

    &.hidden {
      animation: hideInfo ease-in 350ms forwards;
    }
  }
}

@keyframes showInfo {
  from {
    content-visibility: hidden;
    transform: rotateX(90deg);
    translate: 0 -50%;
    block-size: 0;
    padding-block: 0;
    box-sizing: border-box;
    opacity: 0.2;
  }
  to {
    content-visibility: visible;
    transform: rotateX(0deg);
    translate: 0 0;
    block-size: 1lh;
    box-sizing: content-box;
    padding-block: var(--spacing-sm);
  }
}

@keyframes hideInfo {
  from {
    content-visibility: visible;
    transform: rotateX(0deg);
    translate: 0 0;
    block-size: 1lh;
    box-sizing: content-box;
    padding-block: var(--spacing-sm);
  }
  to {
    content-visibility: hidden;
    transform: rotateX(90deg);
    translate: 0 -50%;
    opacity: 0.2;
    block-size: 0;
    box-sizing: border-box;
    padding-block: 0;
  }
}
