@layer tokens.spacing {
  /*********************************************************************************************
  * || 3. SPACING AND PADDING ||
  *********************************************************************************************/
  :root,
  ::backdrop {
    /* By default, we set our base spacing unit equal to the most common spacing element on 
    most pages (the text's line height) to ensure a consistent rhythm in the layout. */
    --spacing-unit: 1rlh;

    /* Note 1rch is the width of the 0 glyph of the current root font. 
       Generally speaking 1rch ~ 8px ~ 0.5em */
    --p-max-root-width: 90rch;

    /* Default max width for our content on the screen. Ensures readability etc. */
    /* Approximately 720px wide depending on root font. */
    --max-content-width: var(--p-max-root-width, 90rch);
    --max-wide-width: 1200px;

    /* --p-min-width: 22ch; */

    /* According to studies, line width should generally not exceed ~70 characters. 
       Here we set a variable to constrain the max text width where possible. */
    --p-max-width: 80ch;

    /* Default radius for rounded corners. */
    --border-radius: 0.5rem;

    /* Set 'spacing 0' to the same unit as our spacing unit so we can calc -ve values from it. */
    --spacing-0: calc(var(--spacing-unit) * 0);

    /* Use our spacing unit to compute spacing variables that align to our baseline grid. */
    --spacing-xs: calc(var(--spacing-unit, 1rlh) * 0.2);
    --spacing-sm: calc(var(--spacing-unit, 1rlh) * 0.5);
    --spacing-md: var(--spacing-unit, 1rlh);
    --spacing-lg: calc(var(--spacing-unit, 1rlh) * 2);
    --spacing-xl: calc(var(--spacing-unit, 1rlh) * 2.5);
    --spacing-xxl: calc(var(--spacing-unit, 1rlh) * 3);
    --spacing-huge: calc(var(--spacing-unit, 1rlh) * 4);

    --gutter-xs: var(--spacing-xs);
    --gutter-sm: var(--spacing-sm);
    --gutter: var(--spacing-md);
    --gutter-lg: var(--spacing-lg);

    /* Ensure that the horizontal screen padding is always at least 8dvw on either side*/
    --min-content-width: calc(100dvw - calc(8dvw * 2));

    /* Ensure the content width never goes over the max and never under the min */
    /* (roughly  */
    --page-content-width: min(var(--max-content-width), var(--min-content-width));

    --page-wide-width: min(var(--max-wide-width), var(--min-content-width));

    --page-centered-grid: 1fr var(--page-content-width) 1fr;

    --page-content-column: -2 / 2;
    --page-full-column: -1 / 1;
  }
}
